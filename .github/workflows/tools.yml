name: Build/upload tools

on:
  workflow_dispatch:

jobs:
  MAME-AMD64:
    name: Build mame-tools AMD64
    runs-on: ubuntu-latest
    steps:
      - name: Get tag
        run: |
          latest_tag=$(curl -s "https://api.github.com/repos/mamedev/mame/releases/latest" | jq -r '.tag_name')
          echo "LATEST_TAG=$latest_tag" >> $GITHUB_ENV
    
      - name: Enable source repositories
        run: |
          source /etc/os-release
          echo "deb-src http://azure.archive.ubuntu.com/ubuntu $VERSION_CODENAME main restricted universe multiverse" | sudo tee -a /etc/apt/sources.list
          echo "deb-src http://azure.archive.ubuntu.com/ubuntu $VERSION_CODENAME-updates main restricted universe multiverse" | sudo tee -a /etc/apt/sources.list
          echo "deb-src http://security.ubuntu.com/ubuntu $VERSION_CODENAME-security main restricted universe multiverse" | sudo tee -a /etc/apt/sources.list
          sudo apt update
          
      - name: Install dependencies
        run: |
            sudo apt build-dep mame-tools -y
            sudo apt install wget

      - name: wget latest mame repo release
        run: |
          wget https://github.com/mamedev/mame/archive/refs/tags/${{ env.LATEST_TAG }}.zip
          unzip ${{ env.LATEST_TAG }}.zip
          rm ${{ env.LATEST_TAG }}.zip
          mv mame-* mame

      - name: Build mame-tools
        run: |
          cd mame
          make TOOLS=1 EMULATOR=0 -j4
          cp chdman ../

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: chdman-AMD64-${{ env.LATEST_TAG }}
          path: chdman

  MAME-ARM64:
      name: Build mame-tools ARM64
      runs-on: ubuntu-24.04-arm
      steps:
      - name: Get tag
        run: |
          latest_tag=$(curl -s "https://api.github.com/repos/mamedev/mame/releases/latest" | jq -r '.tag_name')
          echo "LATEST_TAG=$latest_tag" >> $GITHUB_ENV
    
      - name: Enable source repositories
        run: |
          source /etc/os-release
          echo "deb-src http://azure.archive.ubuntu.com/ubuntu $VERSION_CODENAME main restricted universe multiverse" | sudo tee -a /etc/apt/sources.list
          echo "deb-src http://azure.archive.ubuntu.com/ubuntu $VERSION_CODENAME-updates main restricted universe multiverse" | sudo tee -a /etc/apt/sources.list
          echo "deb-src http://security.ubuntu.com/ubuntu $VERSION_CODENAME-security main restricted universe multiverse" | sudo tee -a /etc/apt/sources.list
          sudo apt update
          
      - name: Install dependencies
        run: |
            sudo apt build-dep mame-tools -y
            sudo apt install wget
            
      - name: wget latest mame repo release
        run: |
          wget https://github.com/mamedev/mame/archive/refs/tags/${{ env.LATEST_TAG }}.zip
          unzip ${{ env.LATEST_TAG }}.zip
          rm ${{ env.LATEST_TAG }}.zip
          mv mame-* mame
      - name: Build mame-tools
        run: |
          cd mame
          make TOOLS=1 EMULATOR=0 -j4
          cp chdman ../
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: chdman-ARM64-${{ env.LATEST_TAG }}
          path: chdman

  DTools-AMD64:
      name: Build dolphin-tools AMD64
      runs-on: ubuntu-latest
      steps:
      - name: Enable source repositories
        run: |
          source /etc/os-release
          echo "deb-src http://azure.archive.ubuntu.com/ubuntu $VERSION_CODENAME main restricted universe multiverse" | sudo tee -a /etc/apt/sources.list
          echo "deb-src http://azure.archive.ubuntu.com/ubuntu $VERSION_CODENAME-updates main restricted universe multiverse" | sudo tee -a /etc/apt/sources.list
          echo "deb-src http://security.ubuntu.com/ubuntu $VERSION_CODENAME-security main restricted universe multiverse" | sudo tee -a /etc/apt/sources.list
          sudo apt update
          
      - name: Install dependencies
        run: |
            sudo apt build-dep dolphin -y
            sudo apt install wget
            
      - name: clone dolphin repo
        run: |
          git clone --recursive https://github.com/dolphin-emu/dolphin
          
      - name: Build dolphin-tools
        run: |
          cd dolphin
          mkdir build
          cd build
          cmake ..
          make -j$(nproc)
          cp dolphin-tool ../../
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: dolphin-tool-AMD64
          path: dolphin-tool

  DTools-ARM64:
      name: Build dolphin-tools ARM64
      runs-on: ubuntu-24.04-arm
      steps:
      - name: Enable source repositories
        run: |
          source /etc/os-release
          echo "deb-src http://azure.archive.ubuntu.com/ubuntu $VERSION_CODENAME main restricted universe multiverse" | sudo tee -a /etc/apt/sources.list
          echo "deb-src http://azure.archive.ubuntu.com/ubuntu $VERSION_CODENAME-updates main restricted universe multiverse" | sudo tee -a /etc/apt/sources.list
          echo "deb-src http://security.ubuntu.com/ubuntu $VERSION_CODENAME-security main restricted universe multiverse" | sudo tee -a /etc/apt/sources.list
          sudo apt update
          
      - name: Install dependencies
        run: |
            sudo apt build-dep dolphin -y
            sudo apt install wget
            
      - name: clone dolphin repo
        run: |
          git clone --recursive https://github.com/dolphin-emu/dolphin
          
      - name: Build dolphin-tools
        run: |
          cd dolphin
          mkdir build
          cd build
          cmake ..
          make -j$(nproc)
          cp dolphin-tool ../../
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: dolphin-tool-ARM64
          path: dolphin-tool

  release:
    needs: [MAME-AMD64, MAME-ARM64, DTools-AMD64, DTools-ARM64]
    runs-on: ubuntu-latest
    steps:
      - name: Get tag
        run: |
          latest_tag=$(curl -s "https://api.github.com/repos/mamedev/mame/releases/latest" | jq -r '.tag_name')
          echo "LATEST_TAG=$latest_tag" >> $GITHUB_ENV
          
      - name: Download Artifact One
        uses: actions/download-artifact@v4
        with:
          name: chdman-AMD64-${{ env.LATEST_TAG }}
          path: artifacts

      - name: Download Artifact Two
        uses: actions/download-artifact@v4
        with:
          name: chdman-ARM64-${{ env.LATEST_TAG }}
          path: artifacts

      - name: Download Artifact Three
        uses: actions/download-artifact@v4
        with:
          name: dolphin-tool-AMD64
          path: artifacts

      - name: Download Artifact Four
        uses: actions/download-artifact@v4
        with:
          name: dolphin-tool-ARM64
          path: artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
